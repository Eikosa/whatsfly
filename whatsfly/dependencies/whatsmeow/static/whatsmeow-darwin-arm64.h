/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"
 #include "wapp.h"
 #include <string.h>
 #include <stdlib.h>
 #include <stdint.h>

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern int NewWhatsAppClientWrapper(char* c_phone_number, char* c_media_path, ptr_to_pyfunc fn_disconnect_callback, ptr_to_pyfunc_str fn_event_callback);
extern void ConnectWrapper(int id);
extern void DisconnectWrapper(int id);
extern void MessageThreadWrapper(int id);
extern int SendMessageProtobufWrapper(int id, char* c_phone_number, char* c_message, _Bool c_is_group);
extern int SendMessageWrapper(int id, char* c_phone_number, char* c_message, _Bool c_is_group);
extern int SendImageWrapper(int id, char* c_phone_number, char* c_image_path, char* c_caption, _Bool c_is_group);
extern int SendVideoWrapper(int id, char* c_phone_number, char* c_video_path, char* c_caption, _Bool c_is_group);
extern int SendAudioWrapper(int id, char* c_phone_number, char* c_audio_path, _Bool c_is_group);
extern int SendDocumentWrapper(int id, char* c_phone_number, char* c_document_path, char* c_caption, _Bool c_is_group);
extern int GetGroupInviteLinkWrapper(int id, char* c_jid, _Bool c_reset, char* c_return_id);
extern int JoinGroupWithInviteLinkWrapper(int id, char* c_link);
extern int SetGroupAnnounceWrapper(int id, char* c_jid, _Bool c_announce);
extern int SetGroupLockedWrapper(int id, char* c_jid, _Bool c_locked);
extern int SetGroupNameWrapper(int id, char* c_jid, char* c_name);
extern int SetGroupTopicWrapper(int id, char* c_jid, char* c_topic);
extern int GetGroupInfoWrapper(int id, char* c_jid, char* c_return_id);
extern int Version();

#ifdef __cplusplus
}
#endif
